{"paragraphs":[{"text":"%md\n## 开始\n\n### 数据描述：\n\n本案例为银行分析数据，有5列：\n\n年龄、工作、婚姻状况、教育程度、余额\n\n\n### 处理方法\n本例首先从网上获取数据内容，并转为spark数据分析常用的格式DataFrame\n\n之后将使用sparkSql对以下内容进行可视化：\n\n1.小于30岁的用户数量随年龄的分布情况\n\n2.小于XX岁的用户数量随年龄的分布情况，这里XX岁可以通过zeppelin的提供的输入框自定义填写\n\n3.不用婚姻状况的银行用户数量随年龄的分布情况，这里婚姻状况可以通过zeppelin提供的选择框自定义选择","user":"anonymous","dateUpdated":"2019-07-15T10:38:32+0800","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>开始</h2>\n<h3>数据描述：</h3>\n<p>本案例为银行分析数据，有5列：</p>\n<p>年龄、工作、婚姻状况、教育程度、余额</p>\n<h3>处理方法</h3>\n<p>本例首先从网上获取数据内容，并转为spark数据分析常用的格式DataFrame</p>\n<p>之后将使用sparkSql对以下内容进行可视化：</p>\n<p>1.小于30岁的用户数量随年龄的分布情况</p>\n<p>2.小于XX岁的用户数量随年龄的分布情况，这里XX岁可以通过zeppelin的提供的输入框自定义填写</p>\n<p>3.不用婚姻状况的银行用户数量随年龄的分布情况，这里婚姻状况可以通过zeppelin提供的选择框自定义选择</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1562807356868_-201333129","id":"20190710-140740_1484478264","dateCreated":"2019-07-11T09:09:16+0800","dateStarted":"2019-07-15T10:30:13+0800","dateFinished":"2019-07-15T10:30:13+0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:643"},{"title":"加载数据（以银行分析数据为例）","text":"import org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\n\n// Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\n// So you don't need create them manually\n\n// load bank data\nval bankText = sc.parallelize(\n    IOUtils.toString(\n        new URL(\"https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv\"),\n        Charset.forName(\"utf8\")).split(\"\\n\"))\n\ncase class Bank(age: Integer, job: String, marital: String, education: String, balance: Integer)\n\nval bank = bankText.map(s => s.split(\";\")).filter(s => s(0) != \"\\\"age\\\"\").map(\n    s => Bank(s(0).toInt, \n            s(1).replaceAll(\"\\\"\", \"\"),\n            s(2).replaceAll(\"\\\"\", \"\"),\n            s(3).replaceAll(\"\\\"\", \"\"),\n            s(5).replaceAll(\"\\\"\", \"\").toInt\n        )\n).toDF()\nbank.registerTempTable(\"bank\")","user":"anonymous","dateUpdated":"2019-07-15T10:30:13+0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":196,"optionOpen":false}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\nimport sqlContext.implicits._\nimport org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\nbankText: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[759] at parallelize at <console>:29\ndefined class Bank\nbank: org.apache.spark.sql.DataFrame = [age: int, job: string ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1562807356870_52317837","id":"20150210-015259_1403135953","dateCreated":"2019-07-11T09:09:16+0800","dateStarted":"2019-07-15T10:30:13+0800","dateFinished":"2019-07-15T10:30:19+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:644"},{"text":"%sql \nselect age, count(1) value\nfrom bank \nwhere age < 30 \ngroup by age \norder by age","user":"anonymous","dateUpdated":"2019-07-15T10:32:30+0800","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":4,"editorMode":"ace/mode/sql","fontSize":9,"results":[{"graph":{"mode":"pieChart","height":366,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":false},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"age","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"value","index":1,"aggr":"sum"}]},"helium":{}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://master:4040/jobs/job?id=336"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1562807356871_1570554695","id":"20150210-015302_1492795503","dateCreated":"2019-07-11T09:09:16+0800","dateStarted":"2019-07-15T10:30:19+0800","dateFinished":"2019-07-15T10:30:20+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:645"},{"text":"%sql \nselect age, count(1) value \nfrom bank \nwhere age < ${maxAge=30} \ngroup by age \norder by age","user":"anonymous","dateUpdated":"2019-07-15T10:31:24+0800","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":4,"editorMode":"ace/mode/sql","fontSize":9,"results":[{"graph":{"mode":"table","height":294,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":false},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"age","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"value","index":1,"aggr":"sum"}]},"helium":{}}],"enabled":true},"settings":{"params":{"maxAge":"35"},"forms":{"maxAge":{"type":"TextBox","name":"maxAge","defaultValue":"30","hidden":false,"$$hashKey":"object:760"}}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n30\t150\n31\t199\n32\t224\n33\t186\n34\t231\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://master:4040/jobs/job?id=337"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1562807356872_-986702686","id":"20150212-145404_867439529","dateCreated":"2019-07-11T09:09:16+0800","dateStarted":"2019-07-15T10:30:20+0800","dateFinished":"2019-07-15T10:30:21+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:646"},{"text":"%sql \nselect age, count(1) value \nfrom bank \nwhere marital=\"${marital=single,single|divorced|married}\" \ngroup by age \norder by age","user":"anonymous","dateUpdated":"2019-07-15T10:39:12+0800","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":4,"editorMode":"ace/mode/sql","fontSize":9,"runOnSelectionChange":true,"results":[{"graph":{"mode":"lineChart","height":280,"optionOpen":false,"setting":{"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","style":"stack"},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"age","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"value","index":1,"aggr":"sum"}]},"helium":{}}],"enabled":true},"settings":{"params":{"marital":"single"},"forms":{"marital":{"type":"Select","options":[{"value":"single","$$hashKey":"object:2085"},{"value":"divorced","$$hashKey":"object:2086"},{"value":"married","$$hashKey":"object:2087"}],"name":"marital","defaultValue":"single","hidden":false,"$$hashKey":"object:2076"}}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t17\n24\t13\n25\t33\n26\t56\n27\t64\n28\t78\n29\t56\n30\t92\n31\t86\n32\t105\n33\t61\n34\t75\n35\t46\n36\t50\n37\t43\n38\t44\n39\t30\n40\t25\n41\t19\n42\t23\n43\t21\n44\t20\n45\t15\n46\t14\n47\t12\n48\t12\n49\t11\n50\t8\n51\t6\n52\t9\n53\t4\n55\t3\n56\t3\n57\t2\n58\t7\n59\t2\n60\t5\n66\t2\n69\t1\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://master:4040/jobs/job?id=338"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1562807356873_1605975220","id":"20150213-230422_1600658137","dateCreated":"2019-07-11T09:09:16+0800","dateStarted":"2019-07-15T10:30:21+0800","dateFinished":"2019-07-15T10:30:22+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:647"},{"user":"anonymous","dateUpdated":"2019-07-15T10:30:22+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1562807356875_-226254984","id":"20190710-140706_2073853650","dateCreated":"2019-07-11T09:09:16+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:648"}],"name":"01.Spark数据分析demo","id":"2EF59XN98","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}